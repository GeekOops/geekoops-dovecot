- name: enable server:mail repository. It has a newer verion of dovecot
  community.general.zypper_repository:
    name: server:mail
    repo: 'https://download.opensuse.org/repositories/server:/mail/15.4/'
    state: present
    runrefresh: true
    auto_import_keys: yes

- name: Refresh repos and update packages
  community.general.zypper:
    name: '*'
    state: latest
    update_cache: yes

- name: Install packages
  ansible.builtin.package:
    name:
      - dovecot
      - dovecot23-backend-mysql
      - haveged
    state: present

- name: start haveged entropy daemon
  ansible.builtin.systemd:
    enabled: true
    state: started
    name: haveged

- name: create {{ mail_db_name }} database
  community.mysql.mysql_db:
    name: "{{ mail_db_name }}"
    encoding: "utf8"
    state: present

- include_tasks: create_mysql_dbs.yml
  when: mail_sql_backup| length == 0

# Copy database dump file to remote host and restore it to database 'my_db'
- name: Copy database dump file
  ansible.builtin.copy:
    src: "{{ mail_sql_backup }}"
    dest: /tmp
  when: mail_sql_backup| length > 0

- name: create {{ mail_db_user }} database user
  community.mysql.mysql_user:
    name: "{{ mail_db_user }}"
    password: "{{ mail_db_pw }}"
    state: present
    priv:
      '{{ mail_db_name }}.*:SELECT,GRANT'

- name: optionally play back an SQL backup
  community.mysql.mysql_db:
    name: "{{ mail_db_name }}"
    state: import
    target: "/tmp/{{ mail_sql_backup }}"
  when: mail_sql_backup| length > 0

- name: Check if vmail user exists
  ansible.builtin.getent:
    database: passwd
    key: "{{ mail_vmail_user }}"
  ignore_errors: yes 
    
- name: create vmail user
  ansible.builtin.user:
    name: "{{ mail_vmail_user }}"
    shell: /usr/sbin/nologin
    home: "{{ mail_vmail_directory }}"
    groups: "{{ mail_vmail_user }}"
  when: ansible_facts.getent_passwd[mail_vmail_user] is not defined

- name: Create main dovecot configuration. The filename is chosen, such that we obtain the expected ordering
  ansible.builtin.template:
    src: local.conf.j2
    dest: /etc/dovecot/conf.d/zzz-local.conf
    owner: root
    group: root
    mode: '0644'

- name: Create additional SQL mapping configuration
  ansible.builtin.template:
    src: "dovecot-dict-sql.conf.ext.j2"
    dest: "/etc/dovecot/dovecot-dict-sql.conf.ext"
    owner: root
    group: root
    mode: '0644'

- name: Create additional SQL configuration (The actual query statements)
  ansible.builtin.template:
    src: "dovecot-sql.conf.ext.j2"
    dest: "/etc/dovecot/dovecot-sql.conf.ext"
    owner: root
    group: root
    mode: '0600'

#- name: Create additional SQL configuration
#  ansible.builtin.template:
#    src: auth-sql.conf.j2
#    dest: /etc/dovecot/conf.d/auth-sql.conf
#    owner: root
#    group: root
#    mode: '0644'

- name: Create additional LDAP configuration(Our implementation is different enough from the default one.)
  ansible.builtin.template:
    src: auth-ldap.conf.ext.j2
    dest: /etc/dovecot/conf.d/auth-ldap.conf.ext
    owner: root
    group: root
    mode: '0644'

- name: Create additional LDAP configuration (The actual query statements)
  ansible.builtin.template:
    src: dovecot-ldap.conf.ext.j2
    dest: /etc/dovecot/dovecot-ldap.conf.ext
    owner: root
    group: root
    mode: '0600'

- name: Ensure that the system.conf extension by dovecot on OpenSuSE is not loaded
  ansible.builtin.lineinfile:
    path: /etc/dovecot/conf.d/10-auth.conf
    regexp: '^!include auth-system.conf.ext'
    line: '#!include auth-system.conf.ext'

- name: Create diffie Hellman Entropy file
  ansible.builtin.command: openssl dhparam -out /etc/dovecot/dh4096.pem 4096 

- name: create cronjob for updating DH parameters
  ansible.builtin.cron:
    name: dh4096
    state: present
    special_time: weekly
    user: root
    job: openssl dhparam -out /etc/dovecot/dh4096.pem 4096 2> /dev/null

- name: set rights on maildirs folder
  ansible.builtin.file:
    path: "{{ mail_vmail_directory }}"
    state: directory
    mode: '0771'
    owner: "{{ mail_vmail_user }}"
    group: "{{ mail_vmail_user }}"

- name: create sieve folder
  ansible.builtin.file:
    path: "{{ mail_vmail_directory }}/sieve/global"
    state: directory
    mode: '0775'
    owner: "{{ mail_vmail_user }}"
    group: "{{ mail_vmail_user }}"
  when: mail_setup_rspam_filter  == true


- name: Copy scripts for spam detection with rspamd
  ansible.builtin.template:
    src: "{{item}}.j2"
    dest: "{{ mail_vmail_directory }}/sieve/global/{{ item }}"
    owner: root
    group: root
    mode: '0644'
  loop:
    - learn-ham.sieve
    - learn-spam.sieve
    - spam-global.sieve
  when: mail_setup_rspam_filter  == true

- name: Ensure AppArmor knows about our location for the virtual mailboxes
  ansible.builtin.lineinfile:
    path: /etc/apparmor.d/local/usr.lib.dovecot.{{ item }}
    state: present
    line: '{{ mail_vmail_directory }}/** rwkl,'
  loop:
    - lmtp
    - imap
    - deliver
    - dovecot-lda
    - managesieve
    - pop3
